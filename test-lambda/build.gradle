plugins {
    id("io.micronaut.library") version "2.0.3"
    id("com.github.johnrengelman.shadow") version "7.0.0"
}

version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
}

micronaut {
    runtime("lambda")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
}

dependencies {
    implementation("io.micronaut:micronaut-runtime")
    implementation("javax.annotation:javax.annotation-api")
    implementation platform('com.amazonaws:aws-java-sdk-bom:1.12.58')
    implementation('com.amazonaws:aws-java-sdk-s3')
    implementation("io.micronaut.aws:micronaut-aws-sdk-v2:3.0.0") {
        force = true
    }

    implementation("io.micronaut.aws:micronaut-function-aws")
    implementation('com.fasterxml.jackson.core:jackson-databind:2.12.5')
    implementation("com.amazonaws:aws-lambda-java-core:1.2.1")
    implementation("com.amazonaws:aws-lambda-java-events:3.9.0")
    runtimeOnly("ch.qos.logback:logback-classic")
}


java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}


tasks.named("assemble") {
    dependsOn(":shadowJar")
}

task buildZip(type: Zip) {
    archiveFileName = "test-lambda-1.zip"
    dependsOn test
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}